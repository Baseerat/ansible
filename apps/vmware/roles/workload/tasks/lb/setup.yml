---

- name: get memcached address
  shell: kubectl get pods --selector=app=memcached -o jsonpath={.items[*].status.podIP}
  register: memcached_address
  when: '"master" in nodes[inventory_hostname]["type"] and workload.lb.apache_servers.feedback.type == "memcached"'
  failed_when: 'memcached_address.stdout == ""'
  become: true

- name: create memcached script
  set_fact:
    feedback_command: "python /root/request-lb-weight.py `hostname -i` {{ memcached_address.stdout }}:11211 {{ workload.lb.apache_servers.feedback.timeout }} False {{ workload.lb.apache_servers.feedback.metric }} {{ workload.lb.apache_servers.feedback.param }};"
  when: '"master" in nodes[inventory_hostname]["type"] and workload.lb.apache_servers.feedback.type == "memcached" and memcached_address.stdout != ""'
  become: true

- name: define feedback_command if undefined
  set_fact:
    feedback_command: ""
  when: feedback_command is not defined
  become: true

- name: upload apache-servers' configs
  template:
    src: roles/workload/templates/apache-servers.yml.j2
    dest: /tmp/app.apache-servers.yml
  when: '"master" in nodes[inventory_hostname]["type"]'
  become: true

- name: create apache-servers' apps
  shell: kubectl apply -f /tmp/app.apache-servers.yml
  when: '"master" in nodes[inventory_hostname]["type"]'
  become: true

- pause:
    minutes: 2

- name: sync apache-servers' service
  shell: kube-ipvs-proxy.py {{ workload.lb.apache_servers.namespace }} {{ k8s_node_address_prefix }}{{ nodes[inventory_hostname]['master']['prme_id'] }}.{{ nodes[inventory_hostname]['master']['vm_id'] }}:{{ k8s_api_server_port }} sync apache-servers {{ workload.lb.apache_servers.policy }}
  when: '"minion" in nodes[inventory_hostname]["type"]'
  become: true

- name: fetch dump-ipvsadm-L-n.py script
  get_url:
    url: https://raw.githubusercontent.com/Baseerat/ipvs-utils/master/dump-ipvsadm-L-n.py
    dest: /usr/local/bin/dump-ipvsadm-L-n.py
    mode: 0755
  when: '"minion" in nodes[inventory_hostname]["type"]'
  become: true

- name: run dump-ipvsadm-L-n.py script
  shell: nohup dump-ipvsadm-L-n.py {{ workload.lb.ipvsadm.timeout }} {{ workload_logs_dir }}/ipvsadm_L_n.{{ inventory_hostname }}.csv > /dev/null 2> /dev/null < /dev/null &
  when: '"minion" in nodes[inventory_hostname]["type"]'
  become: true

- name: fetch dump-ipvsadm-L-n--stats.py script
  get_url:
    url: https://raw.githubusercontent.com/Baseerat/ipvs-utils/master/dump-ipvsadm-L-n--stats.py
    dest: /usr/local/bin/dump-ipvsadm-L-n--stats.py
    mode: 0755
  when: '"minion" in nodes[inventory_hostname]["type"]'
  become: true

- name: run dump-ipvsadm-L-n--stats.py script
  shell: nohup dump-ipvsadm-L-n--stats.py {{ workload.lb.ipvsadm.timeout }} {{ workload_logs_dir }}/ipvsadm_L_n__stats.{{ inventory_hostname }}.csv > /dev/null 2> /dev/null < /dev/null &
  when: '"minion" in nodes[inventory_hostname]["type"]'
  become: true
