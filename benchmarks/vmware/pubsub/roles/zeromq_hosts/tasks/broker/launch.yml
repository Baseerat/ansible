---

- name: upload radio.cpp to publishers
  template:
    src: roles/zeromq_hosts/templates/radio.cpp.j2
    dest: /root/libzmq/tests/radio_{{ item }}.cpp
  vars:
    pub_cmds: "{{ broker_pub_cmds }}"
  with_sequence: start=0 end={{ broker_pubsub_nodes[inventory_hostname].count|int - 1 }} format=%d
  when: '"publisher" in broker_pubsub_nodes[inventory_hostname].type'

- name: add connection to radio_*.cpp
  lineinfile:
    path: /root/libzmq/tests/radio_{{ item }}.cpp
    line: 'rc = zmq_connect (radio, "udp://{{ ip }}:{{ port}}"); assert (rc == 0);'
    insertafter: '__insert_here__'
    state: present
  vars:
    ip: "{{ hostvars[broker_pubsub_nodes[inventory_hostname].broker.node].ansible_eth7.ipv4.address }}"
    port: "{{ pubsub_sub_port_base }}"
  with_sequence: start=0 end={{ broker_pubsub_nodes[inventory_hostname].count|int - 1 }} format=%d
  when: '"publisher" in broker_pubsub_nodes[inventory_hostname].type'

- name: build radio_*.cpp
  shell: cd /root/libzmq/tests;
         gcc radio_{{ item }}.cpp -o radio_{{ item }} -lzmq -O2
  with_sequence: start=0 end={{ broker_pubsub_nodes[inventory_hostname].count|int - 1 }} format=%d
  when: '"publisher" in broker_pubsub_nodes[inventory_hostname].type'

- name: upload dish.cpp to subscribers
  template:
    src: roles/zeromq_hosts/templates/dish.cpp.j2
    dest: /root/libzmq/tests/dish_{{ port }}.cpp
  vars:
    port: "{{ pubsub_sub_port_base|int + item|int }}"
  with_sequence: start=0 end={{ broker_pubsub_nodes[inventory_hostname].count|int - 1 }} format=%d
  when: '"subscriber" in broker_pubsub_nodes[inventory_hostname].type'

- name: build dish_*.cpp
  shell: cd /root/libzmq/tests;
         gcc dish_{{ port }}.cpp -o dish_{{ port }} -lzmq -O2
  vars:
    port: "{{ pubsub_sub_port_base|int + item|int }}"
  with_sequence: start=0 end={{ broker_pubsub_nodes[inventory_hostname].count|int - 1 }} format=%d
  when: '"subscriber" in broker_pubsub_nodes[inventory_hostname].type'

- name: upload broker.cpp to brokers
  template:
    src: roles/zeromq_hosts/templates/broker.cpp.j2
    dest: /root/libzmq/tests/broker.cpp
  vars:
    port: "{{ pubsub_sub_port_base }}"
  when: '"broker" in broker_pubsub_nodes[inventory_hostname].type'

- name: add connections to broker.cpp
  include: roles/zeromq_hosts/tasks/broker/add_connection.yml __sub="{{ _sub }}"
  with_items: "{{ broker_pubsub_nodes[inventory_hostname].subs }}"
  loop_control:
    loop_var: _sub
  when: '"broker" in broker_pubsub_nodes[inventory_hostname].type'

- name: build broker.cpp
  shell: cd /root/libzmq/tests;
         gcc broker.cpp -o broker -lzmq -O2
  when: '"broker" in broker_pubsub_nodes[inventory_hostname].type'

- name: upload log_broker_stats.sh script to brokers
  template:
    src: roles/zeromq_hosts/templates/log_broker_stats.sh.j2
    dest: /tmp/log_broker_stats.sh
  vars:
    pub_count_per_node: "{{ broker_pub_count_per_node }}"
    sub_count_per_node: "{{ broker_sub_count_per_node }}"
    pub_cmds: "{{ broker_pub_cmds }}"
  when: '"broker" in broker_pubsub_nodes[inventory_hostname].type'

- name: launch dish_*
  shell: cd /root/libzmq/tests;
         ./dish_{{ port }} &
  vars:
    port: "{{ pubsub_sub_port_base|int + item|int }}"
  with_sequence: start=0 end={{ broker_pubsub_nodes[inventory_hostname].count|int - 1 }} format=%d
  when: '"subscriber" in broker_pubsub_nodes[inventory_hostname].type'

- name: launch broker
  shell: cd /root/libzmq/tests;
         ./broker &
         sleep 2;
         taskset -a -p 0x0100 $(pidof broker)
  when: '"broker" in broker_pubsub_nodes[inventory_hostname].type'

- name: launch radio_*
  shell: cd /root/libzmq/tests;
         ./radio_{{ item }} &
  with_sequence: start=0 end={{ broker_pubsub_nodes[inventory_hostname].count|int - 1 }} format=%d
  when: '"publisher" in broker_pubsub_nodes[inventory_hostname].type'

- pause:
    seconds: 5

- name: log radio stats
  shell: sh /tmp/log_broker_stats.sh &
  when: '"broker" in broker_pubsub_nodes[inventory_hostname].type'
