---

#- name: install essentials #***DO NOT UNCOMMENT***
#  include: roles/proxmox/tasks/networking/overlay/switches/pisces/build/essentials.yml

- name: include overlay variables
  include_vars: roles/proxmox/defaults/networking/overlay.yml

- name: configure huge page tables
  script: roles/proxmox/files/hugetlbfs.sh setup 512

- name: get p4-hlir source code
  unarchive:
    src: https://github.com/Baseerat/p4-hlir/archive/master.zip
    dest: /tmp
    remote_src: True

- name: install p4-hlir module
  shell: cd /tmp/p4-hlir-master;
         python setup.py install;
         cd /root

- name: get p4c-behavioral source code
  unarchive:
    src: https://github.com/Baseerat/p4c-behavioral/archive/Baseerat.zip
    dest: /tmp
    remote_src: True

- name: install p4c-behavioral module
  shell: cd /tmp/p4c-behavioral-Baseerat;
         python setup.py install;
         cd /root

- name: clone ovs source code
  git:
    repo: https://github.com/Baseerat/ovs.git
    dest: /root/ovs
    version: Baseerat

- name: initialize ovs submodules
  shell: cd /root/ovs;
         git submodule update --init;
         cd /root

- name: patch and build dpdk
  shell: cd /root/ovs/deps/dpdk;
         patch -p1 -N < ../../setup-scripts/patches/dpdk.patch;
         make -j 8 install T=x86_64-native-linuxapp-gcc;
         cd /root

- name: set dpdk rte variables
  set_fact:
    RTE_SDK: /root/ovs/deps/dpdk
    RTE_TARGET: x86_64-native-linuxapp-gcc

- name: copy p4 program
  copy:
    src: "{{ switches.pisces.p4_programs.base_dir }}/p4_programs/{{ overlay_switch.pisces.p4_program }}"
    dest: /root/ovs/include/p4/examples/{{ overlay_switch.pisces.p4_program }}

- name: build ovs
  shell: cd /root/ovs;
         export RTE_SDK={{ RTE_SDK }};
         export RTE_TARGET={{ RTE_TARGET }};
         export DPDK_DIR=$RTE_SDK;
         export DPDK_BUILD=$RTE_SDK/$RTE_TARGET;
         ./boot.sh;
         ./configure --with-dpdk=$DPDK_BUILD CFLAGS="{{ switches.pisces.cflags }}" \
                     p4inputfile=./include/p4/examples/{{ overlay_switch.pisces.p4_program }} \
                     p4outputdir=./include/p4/src;
         make clean;
         make -j 8;
         cd /root

- name: modprobe uio
  modprobe:
    name: uio
    state: present

- name: install igb_uio module
  shell: insmod {{ RTE_SDK }}/{{ RTE_TARGET }}/kmod/igb_uio.ko

- name: install rte_kni module
  shell: insmod {{ RTE_SDK }}/{{ RTE_TARGET }}/kmod/rte_kni.ko "lo_mode=lo_mode_ring"

- name: add interfaces to dpdk
  shell: ip link set dev {{ item }} down;
         {{ RTE_SDK }}/tools/dpdk_nic_bind.py -b igb_uio {{ overlay[inventory_hostname].options[item].pci_id }};
  with_items: "{{ overlay[inventory_hostname]['interfaces'][network] }}"

- name: set directory variables
  set_fact:
    OVS_LOCAL_ETC_DIR: /usr/local/etc/openvswitch
    OVS_VAR_RUN_DIR: /usr/local/var/run/openvswitch

- name: ensure {{ OVS_LOCAL_ETC_DIR }} directory is present
  file:
    path: "{{ OVS_LOCAL_ETC_DIR }}"
    state: directory

- name: ensure {{ OVS_VAR_RUN_DIR }} directory is present
  file:
    path: "{{ OVS_VAR_RUN_DIR }}"
    state: directory

- name: initialize ovsdb
  shell: cd /root/ovs/ovsdb;
         ./ovsdb-tool create {{ OVS_LOCAL_ETC_DIR }}/conf.db ../vswitchd/vswitch.ovsschema;
         cd /root

- name: launch ovsdb-server
  shell: cd /root/ovs/ovsdb;
         nohup ./ovsdb-server --remote=punix:{{ OVS_VAR_RUN_DIR }}/db.sock \
                              --remote=db:Open_vSwitch,Open_vSwitch,manager_options --pidfile &
         cd /root

- name: launch ovs-vswitchd
  shell: cd /root/ovs/vswitchd;
         nohup ./ovs-vswitchd --dpdk -c 0x1 -n {{ overlay[inventory_hostname].dpdk.memory_channels }}
                              -- unix:{{ OVS_VAR_RUN_DIR }}/db.sock --pidfile &
         cd /root

- name: set pmd cpu mask
  shell: cd /root/ovs/utilities;
         ./ovs-vsctl set Open_vSwitch . other_config:pmd-cpu-mask={{ overlay[inventory_hostname].dpdk.cpu_mask }};
         cd /root

- name: initialize ovs-vsctl
  shell: cd /root/ovs/utilities;
         ./ovs-vsctl --no-wait init;
         cd /root
